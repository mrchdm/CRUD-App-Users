{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass UsersStore {\n  constructor() {\n    this.users = [];\n    makeAutoObservable(this);\n  }\n  addUser(user) {\n    this.users.push(user);\n  }\n\n  // removeUser(id) {\n  //     this.users = this.users.filter(user => user.id!== user.id)\n  // }\n\n  fetchUsers() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(json => this.users = [this.users, ...json]);\n  }\n}\nexport default new UsersStore();","map":{"version":3,"names":["makeAutoObservable","UsersStore","constructor","users","addUser","user","push","fetchUsers","fetch","then","response","json"],"sources":["/Users/mariadementeva/Documents/crud-users-app/src/Store/user-store.tsx"],"sourcesContent":["import { action, computed, makeAutoObservable, observable, observe } from 'mobx'\nimport { SubmitHandler } from 'react-hook-form'\nimport User from '../Components/User'\nimport { UserTypes } from \"../Types/userForm.interface\"\n\n\n\nclass UsersStore {\n    users: any[] = []\n\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n\n    addUser(user: object) {\n        this.users.push(user)\n    }\n\n    // removeUser(id) {\n    //     this.users = this.users.filter(user => user.id!== user.id)\n    // }\n\n    fetchUsers() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json =>\n                this.users = [this.users, ...json]\n            )\n    }\n}\n\nexport default new UsersStore();"],"mappings":"AAAA,SAA2BA,kBAAkB,QAA6B,MAAM;AAOhF,MAAMC,UAAU,CAAC;EAIbC,WAAWA,CAAA,EAAG;IAAA,KAHdC,KAAK,GAAU,EAAE;IAIbH,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAGAI,OAAOA,CAACC,IAAY,EAAE;IAClB,IAAI,CAACF,KAAK,CAACG,IAAI,CAACD,IAAI,CAAC;EACzB;;EAEA;EACA;EACA;;EAEAE,UAAUA,CAAA,EAAG;IACTC,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IACN,IAAI,CAACR,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK,EAAE,GAAGQ,IAAI,CACrC,CAAC;EACT;AACJ;AAEA,eAAe,IAAIV,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}