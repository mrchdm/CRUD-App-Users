{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass UserStore {\n  constructor() {\n    this.users = [];\n    this.searchquery = '';\n    makeAutoObservable(this);\n  }\n  addUser(user) {\n    this.users.push(user);\n  }\n  removeUser(username) {\n    this.users = this.users.filter(user => user.username !== username);\n  }\n  //пока не работает\n  searchUser(query) {\n    if (!query) {\n      return this.users;\n    }\n    return this.users = this.users.filter(user => user.username.toLowerCase().includes(query.toLowerCase()));\n  }\n  EditUser() {}\n  fetchUsers() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(json => this.users = [this.users.length !== 0 ? this.users : json, ...json]);\n  }\n}\nexport default new UserStore();","map":{"version":3,"names":["makeAutoObservable","UserStore","constructor","users","searchquery","addUser","user","push","removeUser","username","filter","searchUser","query","toLowerCase","includes","EditUser","fetchUsers","fetch","then","response","json","length"],"sources":["/Users/mariadementeva/Documents/crud-users-app/src/Store/user-store.tsx"],"sourcesContent":["import { action, computed, makeAutoObservable, observable, observe } from 'mobx'\nimport { SubmitHandler } from 'react-hook-form'\n\nimport { UserTypes } from \"../Types/userForm.interface\"\n\n\nclass UserStore {\n    users: any[] = []\n    searchquery: string = ''\n\n\n\n\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n\n    addUser(user: object) {\n        this.users.push(user)\n    }\n\n    removeUser(username: string) {\n        this.users = this.users.filter((user: any) => user.username !== username)\n    }\n    //пока не работает\n    searchUser(query: string) {\n        if (!query) {\n            return this.users\n        }\n        return this.users = this.users.filter(user => user.username.toLowerCase().includes(query.toLowerCase()))\n    }\n\n    EditUser() {\n\n    }\n\n    fetchUsers() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json =>\n\n                this.users = [(this.users.length !== 0 ? this.users : json), ...json]\n            )\n    }\n\n}\n\nexport default new UserStore();"],"mappings":"AAAA,SAA2BA,kBAAkB,QAA6B,MAAM;AAMhF,MAAMC,SAAS,CAAC;EAQZC,WAAWA,CAAA,EAAG;IAAA,KAPdC,KAAK,GAAU,EAAE;IAAA,KACjBC,WAAW,GAAW,EAAE;IAOpBJ,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAGAK,OAAOA,CAACC,IAAY,EAAE;IAClB,IAAI,CAACH,KAAK,CAACI,IAAI,CAACD,IAAI,CAAC;EACzB;EAEAE,UAAUA,CAACC,QAAgB,EAAE;IACzB,IAAI,CAACN,KAAK,GAAG,IAAI,CAACA,KAAK,CAACO,MAAM,CAAEJ,IAAS,IAAKA,IAAI,CAACG,QAAQ,KAAKA,QAAQ,CAAC;EAC7E;EACA;EACAE,UAAUA,CAACC,KAAa,EAAE;IACtB,IAAI,CAACA,KAAK,EAAE;MACR,OAAO,IAAI,CAACT,KAAK;IACrB;IACA,OAAO,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,CAACO,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACG,QAAQ,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EAC5G;EAEAE,QAAQA,CAAA,EAAG,CAEX;EAEAC,UAAUA,CAAA,EAAG;IACTC,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAEN,IAAI,CAACjB,KAAK,GAAG,CAAE,IAAI,CAACA,KAAK,CAACkB,MAAM,KAAK,CAAC,GAAG,IAAI,CAAClB,KAAK,GAAGiB,IAAI,EAAG,GAAGA,IAAI,CACxE,CAAC;EACT;AAEJ;AAEA,eAAe,IAAInB,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}