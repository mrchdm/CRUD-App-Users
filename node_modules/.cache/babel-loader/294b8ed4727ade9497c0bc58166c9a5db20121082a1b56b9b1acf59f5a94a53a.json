{"ast":null,"code":"var _jsxFileName = \"/Users/mariadementeva/Documents/crud-users-app/src/Components/UserForm.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from 'react-hook-form';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Stack } from \"@mui/material\";\nimport UserStore from \"../Store/user-store\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserForm = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    setValue,\n    formState: {\n      errors\n    },\n    control\n  } = useForm({});\n  const {\n    editFormValue\n  } = UserStore;\n  const onSubmit = data => {\n    editFormValue ? UserStore.updateUser({\n      oldUsername: editFormValue.username,\n      ...data\n    }) : UserStore.addUser(data);\n    reset();\n  };\n  useEffect(() => {\n    if (editFormValue) {\n      reset(editFormValue);\n    }\n  }, [editFormValue, reset]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 2,\n        maxWidth: \"800px\",\n        minHeight: \"360px\",\n        margin: \"20px auto\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          ...register('name', {\n            required: '* Name is required'\n          }),\n          type: \"text\",\n          placeholder: \"Name\",\n          id: \"name\",\n          label: \"Your name\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          ...register('username', {\n            required: '* Username is required'\n          }),\n          type: \"text\",\n          placeholder: \"UserName\",\n          id: \"username\",\n          label: \" Username\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          ...register('phone'),\n          type: \"text\",\n          placeholder: \"phone\",\n          id: \"phone\",\n          label: \" phone\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.phone) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.phone.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          ...register('email', {\n            pattern: {\n              value: /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/,\n              message: '*Enter valid email'\n            }\n          }),\n          type: \"text\",\n          placeholder: \"Email\",\n          variant: \"outlined\",\n          label: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"YPeVqP78z4sdiIkzaBDsls2c7t0=\", false, function () {\n  return [useForm];\n})), \"YPeVqP78z4sdiIkzaBDsls2c7t0=\", false, function () {\n  return [useForm];\n});\n_c2 = UserForm;\nexport default UserForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserForm$observer\");\n$RefreshReg$(_c2, \"UserForm\");","map":{"version":3,"names":["useForm","TextField","Button","Stack","UserStore","observer","jsxDEV","_jsxDEV","Fragment","_Fragment","UserForm","_s","_c","register","handleSubmit","watch","reset","setValue","formState","errors","control","editFormValue","onSubmit","data","updateUser","oldUsername","username","addUser","useEffect","children","direction","justifyContent","alignItems","spacing","maxWidth","minHeight","margin","required","type","placeholder","id","label","variant","fileName","_jsxFileName","lineNumber","columnNumber","name","style","color","message","phone","pattern","value","email","_c2","$RefreshReg$"],"sources":["/Users/mariadementeva/Documents/crud-users-app/src/Components/UserForm.tsx"],"sourcesContent":["import {SubmitHandler, useForm } from 'react-hook-form'\nimport { UserTypes } from \"../Types/userForm.interface\"\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport {Stack} from \"@mui/material\";\nimport UserStore from \"../Store/user-store\";\nimport { observer } from \"mobx-react-lite\";\n\n\n\nconst UserForm = observer(() => {\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    setValue,\n    formState: { errors },\n    control, } = useForm<UserTypes>({})\n\n\n\n\n  const { editFormValue } = UserStore;\n\n  const onSubmit: SubmitHandler<UserTypes> = (data) => {\n    editFormValue \n      ? UserStore.updateUser({ oldUsername: editFormValue.username, ...data })\n      : UserStore.addUser(data);\n    reset();\n  }\n\n  useEffect(() => {\n    if (editFormValue) {\n      reset(editFormValue);\n    }\n  }, [editFormValue, reset])\n\n\n\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Stack\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"stretch\"\n          spacing={2}\n          maxWidth='800px'\n          minHeight='360px'\n          margin='20px auto'\n        >\n          <TextField {...register('name', { required: '* Name is required' })} type=\"text\" placeholder='Name' id=\"name\" label=\"Your name\" variant=\"outlined\" />\n          {errors?.name && (<div style={{ color: 'red' }}>{errors.name.message}</div>)}\n\n          <TextField {...register('username', { required: '* Username is required' })} type=\"text\" placeholder='UserName' id=\"username\" label=\" Username\" variant=\"outlined\" />\n          {errors?.username && (<div style={{ color: 'red' }}>{errors.username.message}</div>)}\n\n          <TextField {...register('phone')} type=\"text\" placeholder='phone' id=\"phone\" label=\" phone\" variant=\"outlined\" />\n          {errors?.phone && (<div style={{ color: 'red' }}>{errors.phone.message}</div>)}\n\n          <TextField {...register('email', {\n            pattern: {\n              value: /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/,\n              message: '*Enter valid email'\n            }\n          })} type=\"text\" placeholder='Email' variant=\"outlined\" label=\"email\" />\n          {errors?.email && (<div style={{ color: 'red' }}>{errors.email.message}</div>)}\n\n          <Button variant=\"contained\" type=\"submit\">Send</Button>\n        </Stack>\n      </form>\n\n    </>\n  )\n})\n\nexport default UserForm;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}