{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass UserStore {\n  constructor() {\n    this.users = [];\n    this.searchquery = '';\n    this.query = 0;\n    this.navValue = 0;\n    this.searchParam = 'username';\n    this.NavhandleChange = (event, newValue) => {\n      this.navValue = newValue;\n    };\n    makeAutoObservable(this);\n  }\n  addUser(user) {\n    this.users.unshift(user);\n  }\n  removeUser(username) {\n    this.users = this.users.filter(user => user.username !== username);\n  }\n  //пока не работает\n  searchUser(query) {\n    if (!query) {\n      return this.users;\n    }\n    return this.users = this.users.filter(user => user.username.toLowerCase().includes(query.toLowerCase()));\n  }\n  EditUser() {}\n  search() {\n    return this.users.filter(user => {\n      if (user.username == this.searchquery) {\n        return this.searchParam(newItem => {\n          return user[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n        });\n      } else if (this.searchquery == \"All\") {\n        return this.searchParam(newItem => {\n          return user[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1;\n        });\n      }\n    });\n  }\n  fetchUsers() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(json => {\n      if (this.users.length !== 0) {\n        this.users = [this.users, ...json];\n      } else {\n        this.users = [...json];\n      }\n    });\n  }\n}\nexport default new UserStore();\n\n// this.users = [this.users, ...json]","map":{"version":3,"names":["makeAutoObservable","UserStore","constructor","users","searchquery","query","navValue","searchParam","NavhandleChange","event","newValue","addUser","user","unshift","removeUser","username","filter","searchUser","toLowerCase","includes","EditUser","search","newItem","toString","indexOf","q","fetchUsers","fetch","then","response","json","length"],"sources":["/Users/mariadementeva/Documents/crud-users-app/src/Store/user-store.tsx"],"sourcesContent":["import { action, computed, makeAutoObservable, observable, observe } from 'mobx'\nimport { SubmitHandler } from 'react-hook-form'\n\nimport { UserTypes } from \"../Types/userForm.interface\"\n\n\nclass UserStore {\n    users: any[] = []\n    searchquery: string = ''\n    query = 0\n    navValue = 0\n    searchParam = 'username'\n\n\n\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n\n    addUser(user: object) {\n        this.users.unshift(user)\n    }\n\n    removeUser(username: string) {\n        this.users = this.users.filter((user: any) => user.username !== username)\n    }\n    //пока не работает\n    searchUser(query: string) {\n        if (!query) {\n            return this.users\n        }\n        return this.users = this.users.filter(user => user.username.toLowerCase().includes(query.toLowerCase()))\n    }\n\n    EditUser() {\n\n    }\n\n\n   search() {\n        return this.users.filter((user) => {\n            if (user.username == this.searchquery) {\n                return this.searchParam((newItem) => {\n                    return (\n                        user[newItem]\n                            .toString()\n                            .toLowerCase()\n                            .indexOf(q.toLowerCase()) > -1\n                    );\n                });\n            } else if (this.searchquery == \"All\") {\n                return this.searchParam((newItem) => {\n                    return (\n                        user[newItem]\n                            .toString()\n                            .toLowerCase()\n                            .indexOf(q.toLowerCase()) > -1\n                    );\n                });\n            }\n        });\n    }\n\n    fetchUsers() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json =>\n\n               {if(this.users.length !== 0){\n                this.users = [this.users,...json]\n               } \n               else {\n                this.users = [...json]\n               }}\n            )\n    }\n\n NavhandleChange = (event: React.SyntheticEvent, newValue: number) => {\n     this.navValue = newValue;\n    };\n}\nexport default new UserStore();\n\n// this.users = [this.users, ...json]"],"mappings":"AAAA,SAA2BA,kBAAkB,QAA6B,MAAM;AAMhF,MAAMC,SAAS,CAAC;EAUZC,WAAWA,CAAA,EAAG;IAAA,KATdC,KAAK,GAAU,EAAE;IAAA,KACjBC,WAAW,GAAW,EAAE;IAAA,KACxBC,KAAK,GAAG,CAAC;IAAA,KACTC,QAAQ,GAAG,CAAC;IAAA,KACZC,WAAW,GAAG,UAAU;IAAA,KAoE3BC,eAAe,GAAG,CAACC,KAA2B,EAAEC,QAAgB,KAAK;MACjE,IAAI,CAACJ,QAAQ,GAAGI,QAAQ;IACzB,CAAC;IAhEGV,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAGAW,OAAOA,CAACC,IAAY,EAAE;IAClB,IAAI,CAACT,KAAK,CAACU,OAAO,CAACD,IAAI,CAAC;EAC5B;EAEAE,UAAUA,CAACC,QAAgB,EAAE;IACzB,IAAI,CAACZ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACa,MAAM,CAAEJ,IAAS,IAAKA,IAAI,CAACG,QAAQ,KAAKA,QAAQ,CAAC;EAC7E;EACA;EACAE,UAAUA,CAACZ,KAAa,EAAE;IACtB,IAAI,CAACA,KAAK,EAAE;MACR,OAAO,IAAI,CAACF,KAAK;IACrB;IACA,OAAO,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,CAACa,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACG,QAAQ,CAACG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,KAAK,CAACa,WAAW,CAAC,CAAC,CAAC,CAAC;EAC5G;EAEAE,QAAQA,CAAA,EAAG,CAEX;EAGDC,MAAMA,CAAA,EAAG;IACJ,OAAO,IAAI,CAAClB,KAAK,CAACa,MAAM,CAAEJ,IAAI,IAAK;MAC/B,IAAIA,IAAI,CAACG,QAAQ,IAAI,IAAI,CAACX,WAAW,EAAE;QACnC,OAAO,IAAI,CAACG,WAAW,CAAEe,OAAO,IAAK;UACjC,OACIV,IAAI,CAACU,OAAO,CAAC,CACRC,QAAQ,CAAC,CAAC,CACVL,WAAW,CAAC,CAAC,CACbM,OAAO,CAACC,CAAC,CAACP,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAE1C,CAAC,CAAC;MACN,CAAC,MAAM,IAAI,IAAI,CAACd,WAAW,IAAI,KAAK,EAAE;QAClC,OAAO,IAAI,CAACG,WAAW,CAAEe,OAAO,IAAK;UACjC,OACIV,IAAI,CAACU,OAAO,CAAC,CACRC,QAAQ,CAAC,CAAC,CACVL,WAAW,CAAC,CAAC,CACbM,OAAO,CAACC,CAAC,CAACP,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAE1C,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EAEAQ,UAAUA,CAAA,EAAG;IACTC,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAEP;MAAC,IAAG,IAAI,CAAC3B,KAAK,CAAC4B,MAAM,KAAK,CAAC,EAAC;QAC3B,IAAI,CAAC5B,KAAK,GAAG,CAAC,IAAI,CAACA,KAAK,EAAC,GAAG2B,IAAI,CAAC;MAClC,CAAC,MACI;QACJ,IAAI,CAAC3B,KAAK,GAAG,CAAC,GAAG2B,IAAI,CAAC;MACvB;IAAC,CACJ,CAAC;EACT;AAKJ;AACA,eAAe,IAAI7B,SAAS,CAAC,CAAC;;AAE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}