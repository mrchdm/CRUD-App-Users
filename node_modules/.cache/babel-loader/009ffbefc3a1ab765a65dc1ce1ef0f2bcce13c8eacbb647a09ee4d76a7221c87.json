{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass UsersStore {\n  constructor() {\n    this.users = [];\n    this.re = void 0;\n    makeAutoObservable(this);\n  }\n  // fetchUsers = () => {\n  //     return this.users\n  // }\n\n  addUser(user) {\n    this.users.push(user);\n  }\n\n  // addUser({name, username,phone,email}:UserTypes) {\n  //     const newUser = User.create({\n  //       name,\n  //       username,\n  //       phone,\n  //       email\n  //     });\n  //     this.users.push(newUser);\n  //   }\n}\n\nexport default new UsersStore();","map":{"version":3,"names":["makeAutoObservable","UsersStore","constructor","users","re","addUser","user","push"],"sources":["/Users/mariadementeva/Documents/crud-users-app/src/Store/user-store.tsx"],"sourcesContent":["import { action, computed, makeAutoObservable, makeObservable, observable, observe } from 'mobx'\nimport { SubmitHandler } from 'react-hook-form'\nimport User from '../Components/User'\nimport { UserTypes } from \"../Types/userForm.interface\"\n\n\n\nclass UsersStore {\n    users:object[] = []\n\n  \n    constructor() {\n        makeAutoObservable(this)}\n    // fetchUsers = () => {\n    //     return this.users\n    // }\n\n\n    addUser(user:object){\n        this.users.push(user)\n        }\n   \n    re\n        \n    // addUser({name, username,phone,email}:UserTypes) {\n    //     const newUser = User.create({\n    //       name,\n    //       username,\n    //       phone,\n    //       email\n    //     });\n    //     this.users.push(newUser);\n    //   }\n}\n\nexport default new UsersStore();"],"mappings":"AAAA,SAA2BA,kBAAkB,QAA6C,MAAM;AAOhG,MAAMC,UAAU,CAAC;EAIbC,WAAWA,CAAA,EAAG;IAAA,KAHdC,KAAK,GAAY,EAAE;IAAA,KAcnBC,EAAE;IAVEJ,kBAAkB,CAAC,IAAI,CAAC;EAAA;EAC5B;EACA;EACA;;EAGAK,OAAOA,CAACC,IAAW,EAAC;IAChB,IAAI,CAACH,KAAK,CAACI,IAAI,CAACD,IAAI,CAAC;EACrB;;EAIJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;;AAEA,eAAe,IAAIL,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}