{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass UserStore {\n  constructor() {\n    this.users = [];\n    this.fetchUsersValue = [];\n    this.editFormValue = null;\n    this.navValue = 0;\n    this.NavhandleChange = (event, newValue) => {\n      this.navValue = newValue;\n    };\n    makeAutoObservable(this);\n  }\n  addUser(user) {\n    this.fetchUsersValue.unshift(user);\n    this.users = this.fetchUsersValue;\n  }\n  removeUser(username) {\n    this.fetchUsersValue = this.users.filter(user => user.username !== username);\n    this.users = this.fetchUsersValue;\n  }\n  searchUser(query) {\n    if (!query) {\n      this.users = this.fetchUsersValue;\n    }\n    const filtered = this.fetchUsersValue.filter(user => user.username.toLowerCase().includes(query.toLowerCase()));\n    this.users = filtered;\n  }\n  fetchUsers() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(json => {\n      this.users = [...json];\n      this.fetchUsersValue = [...json];\n    });\n  }\n  preUserUpdate(user) {\n    this.navValue = 1;\n    this.editFormValue = user;\n  }\n  updateUser({\n    oldUsername,\n    ...user_data\n  }) {\n    this.fetchUsersValue = this.fetchUsersValue.map(user => {\n      return user.username === oldUsername ? user_data : user;\n    });\n    this.users = this.fetchUsersValue;\n    this.editFormValue = null;\n    this.navValue = 0;\n  }\n}\nexport default new UserStore();","map":{"version":3,"names":["makeAutoObservable","UserStore","constructor","users","fetchUsersValue","editFormValue","navValue","NavhandleChange","event","newValue","addUser","user","unshift","removeUser","username","filter","searchUser","query","filtered","toLowerCase","includes","fetchUsers","fetch","then","response","json","preUserUpdate","updateUser","oldUsername","user_data","map"],"sources":["/Users/mariadementeva/Documents/crud-users-app/src/Store/user-store.tsx"],"sourcesContent":["import { action, computed, makeAutoObservable, observable, observe } from 'mobx'\nimport { SubmitHandler } from 'react-hook-form'\nimport { UserTypes } from \"../Types/userForm.interface\"\n\n\nclass UserStore {\n\n    users: UserTypes[] = []\n    fetchUsersValue: UserTypes[] = []\n    editFormValue: UserTypes | null = null\n    navValue = 0\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n    addUser(user: UserTypes) {\n        this.fetchUsersValue.unshift(user);\n        this.users = this.fetchUsersValue;\n    }\n    \n    removeUser(username: string) {\n        this.fetchUsersValue = this.users.filter((user: UserTypes) => user.username !== username)\n        this.users = this.fetchUsersValue;\n    }\n\n    searchUser(query: string) {\n        if (!query) {\n            this.users = this.fetchUsersValue\n        }\n        const filtered =\n            this.fetchUsersValue.filter(user => user.username.toLowerCase().includes(query.toLowerCase()))\n        this.users = filtered\n    }\n\n    fetchUsers() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(json => {\n                this.users = [...json]\n                this.fetchUsersValue = [...json]\n            })\n    }\n\n    preUserUpdate(user: UserTypes) {\n        this.navValue = 1;\n        this.editFormValue = user;\n    }\n\n    updateUser({ oldUsername, ...user_data } : UserTypes & { oldUsername: string }) {\n        this.fetchUsersValue = this.fetchUsersValue.map((user: UserTypes) => {\n            return user.username === oldUsername ? user_data : user;\n        });\n        this.users = this.fetchUsersValue;\n        this.editFormValue = null;\n        this.navValue = 0;\n    }\n\n    NavhandleChange = (event: React.SyntheticEvent, newValue: number) => {\n        this.navValue = newValue;\n    };\n}\nexport default new UserStore();\n"],"mappings":"AAAA,SAA2BA,kBAAkB,QAA6B,MAAM;AAKhF,MAAMC,SAAS,CAAC;EAOZC,WAAWA,CAAA,EAAG;IAAA,KALdC,KAAK,GAAgB,EAAE;IAAA,KACvBC,eAAe,GAAgB,EAAE;IAAA,KACjCC,aAAa,GAAqB,IAAI;IAAA,KACtCC,QAAQ,GAAG,CAAC;IAAA,KA+CZC,eAAe,GAAG,CAACC,KAA2B,EAAEC,QAAgB,KAAK;MACjE,IAAI,CAACH,QAAQ,GAAGG,QAAQ;IAC5B,CAAC;IA9CGT,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EACAU,OAAOA,CAACC,IAAe,EAAE;IACrB,IAAI,CAACP,eAAe,CAACQ,OAAO,CAACD,IAAI,CAAC;IAClC,IAAI,CAACR,KAAK,GAAG,IAAI,CAACC,eAAe;EACrC;EAEAS,UAAUA,CAACC,QAAgB,EAAE;IACzB,IAAI,CAACV,eAAe,GAAG,IAAI,CAACD,KAAK,CAACY,MAAM,CAAEJ,IAAe,IAAKA,IAAI,CAACG,QAAQ,KAAKA,QAAQ,CAAC;IACzF,IAAI,CAACX,KAAK,GAAG,IAAI,CAACC,eAAe;EACrC;EAEAY,UAAUA,CAACC,KAAa,EAAE;IACtB,IAAI,CAACA,KAAK,EAAE;MACR,IAAI,CAACd,KAAK,GAAG,IAAI,CAACC,eAAe;IACrC;IACA,MAAMc,QAAQ,GACV,IAAI,CAACd,eAAe,CAACW,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACG,QAAQ,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACH,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;IAClG,IAAI,CAAChB,KAAK,GAAGe,QAAQ;EACzB;EAEAG,UAAUA,CAAA,EAAG;IACTC,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI;MACV,IAAI,CAACtB,KAAK,GAAG,CAAC,GAAGsB,IAAI,CAAC;MACtB,IAAI,CAACrB,eAAe,GAAG,CAAC,GAAGqB,IAAI,CAAC;IACpC,CAAC,CAAC;EACV;EAEAC,aAAaA,CAACf,IAAe,EAAE;IAC3B,IAAI,CAACL,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACD,aAAa,GAAGM,IAAI;EAC7B;EAEAgB,UAAUA,CAAC;IAAEC,WAAW;IAAE,GAAGC;EAAgD,CAAC,EAAE;IAC5E,IAAI,CAACzB,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC0B,GAAG,CAAEnB,IAAe,IAAK;MACjE,OAAOA,IAAI,CAACG,QAAQ,KAAKc,WAAW,GAAGC,SAAS,GAAGlB,IAAI;IAC3D,CAAC,CAAC;IACF,IAAI,CAACR,KAAK,GAAG,IAAI,CAACC,eAAe;IACjC,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,QAAQ,GAAG,CAAC;EACrB;AAKJ;AACA,eAAe,IAAIL,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}